/**
 * generated by Xtext 2.13.0
 */
package org.graces.mydsl.myDsl.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.graces.mydsl.myDsl.Multi;
import org.graces.mydsl.myDsl.MyDslPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Multi</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.graces.mydsl.myDsl.impl.MultiImpl#getMultlow <em>Multlow</em>}</li>
 *   <li>{@link org.graces.mydsl.myDsl.impl.MultiImpl#getMultup <em>Multup</em>}</li>
 *   <li>{@link org.graces.mydsl.myDsl.impl.MultiImpl#getMultupunbound <em>Multupunbound</em>}</li>
 *   <li>{@link org.graces.mydsl.myDsl.impl.MultiImpl#getMultdownunbound <em>Multdownunbound</em>}</li>
 * </ul>
 *
 * @generated
 */
public class MultiImpl extends MinimalEObjectImpl.Container implements Multi
{
  /**
   * The default value of the '{@link #getMultlow() <em>Multlow</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMultlow()
   * @generated
   * @ordered
   */
  protected static final int MULTLOW_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getMultlow() <em>Multlow</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMultlow()
   * @generated
   * @ordered
   */
  protected int multlow = MULTLOW_EDEFAULT;

  /**
   * The default value of the '{@link #getMultup() <em>Multup</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMultup()
   * @generated
   * @ordered
   */
  protected static final int MULTUP_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getMultup() <em>Multup</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMultup()
   * @generated
   * @ordered
   */
  protected int multup = MULTUP_EDEFAULT;

  /**
   * The default value of the '{@link #getMultupunbound() <em>Multupunbound</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMultupunbound()
   * @generated
   * @ordered
   */
  protected static final String MULTUPUNBOUND_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getMultupunbound() <em>Multupunbound</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMultupunbound()
   * @generated
   * @ordered
   */
  protected String multupunbound = MULTUPUNBOUND_EDEFAULT;

  /**
   * The default value of the '{@link #getMultdownunbound() <em>Multdownunbound</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMultdownunbound()
   * @generated
   * @ordered
   */
  protected static final String MULTDOWNUNBOUND_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getMultdownunbound() <em>Multdownunbound</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMultdownunbound()
   * @generated
   * @ordered
   */
  protected String multdownunbound = MULTDOWNUNBOUND_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected MultiImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.MULTI;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getMultlow()
  {
    return multlow;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMultlow(int newMultlow)
  {
    int oldMultlow = multlow;
    multlow = newMultlow;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.MULTI__MULTLOW, oldMultlow, multlow));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getMultup()
  {
    return multup;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMultup(int newMultup)
  {
    int oldMultup = multup;
    multup = newMultup;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.MULTI__MULTUP, oldMultup, multup));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getMultupunbound()
  {
    return multupunbound;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMultupunbound(String newMultupunbound)
  {
    String oldMultupunbound = multupunbound;
    multupunbound = newMultupunbound;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.MULTI__MULTUPUNBOUND, oldMultupunbound, multupunbound));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getMultdownunbound()
  {
    return multdownunbound;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMultdownunbound(String newMultdownunbound)
  {
    String oldMultdownunbound = multdownunbound;
    multdownunbound = newMultdownunbound;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.MULTI__MULTDOWNUNBOUND, oldMultdownunbound, multdownunbound));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.MULTI__MULTLOW:
        return getMultlow();
      case MyDslPackage.MULTI__MULTUP:
        return getMultup();
      case MyDslPackage.MULTI__MULTUPUNBOUND:
        return getMultupunbound();
      case MyDslPackage.MULTI__MULTDOWNUNBOUND:
        return getMultdownunbound();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.MULTI__MULTLOW:
        setMultlow((Integer)newValue);
        return;
      case MyDslPackage.MULTI__MULTUP:
        setMultup((Integer)newValue);
        return;
      case MyDslPackage.MULTI__MULTUPUNBOUND:
        setMultupunbound((String)newValue);
        return;
      case MyDslPackage.MULTI__MULTDOWNUNBOUND:
        setMultdownunbound((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.MULTI__MULTLOW:
        setMultlow(MULTLOW_EDEFAULT);
        return;
      case MyDslPackage.MULTI__MULTUP:
        setMultup(MULTUP_EDEFAULT);
        return;
      case MyDslPackage.MULTI__MULTUPUNBOUND:
        setMultupunbound(MULTUPUNBOUND_EDEFAULT);
        return;
      case MyDslPackage.MULTI__MULTDOWNUNBOUND:
        setMultdownunbound(MULTDOWNUNBOUND_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.MULTI__MULTLOW:
        return multlow != MULTLOW_EDEFAULT;
      case MyDslPackage.MULTI__MULTUP:
        return multup != MULTUP_EDEFAULT;
      case MyDslPackage.MULTI__MULTUPUNBOUND:
        return MULTUPUNBOUND_EDEFAULT == null ? multupunbound != null : !MULTUPUNBOUND_EDEFAULT.equals(multupunbound);
      case MyDslPackage.MULTI__MULTDOWNUNBOUND:
        return MULTDOWNUNBOUND_EDEFAULT == null ? multdownunbound != null : !MULTDOWNUNBOUND_EDEFAULT.equals(multdownunbound);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (multlow: ");
    result.append(multlow);
    result.append(", multup: ");
    result.append(multup);
    result.append(", multupunbound: ");
    result.append(multupunbound);
    result.append(", multdownunbound: ");
    result.append(multdownunbound);
    result.append(')');
    return result.toString();
  }

} //MultiImpl
