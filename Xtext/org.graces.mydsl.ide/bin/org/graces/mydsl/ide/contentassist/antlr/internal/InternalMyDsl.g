/*
 * generated by Xtext 2.13.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.graces.mydsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.graces.mydsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.graces.mydsl.services.MyDslGrammarAccess;

}
@parser::members {
	private MyDslGrammarAccess grammarAccess;

	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGroup()); }
		(rule__Model__Group__0)
		{ after(grammarAccess.getModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClass
entryRuleClass
:
{ before(grammarAccess.getClassRule()); }
	 ruleClass
{ after(grammarAccess.getClassRule()); } 
	 EOF 
;

// Rule Class
ruleClass 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassAccess().getGroup()); }
		(rule__Class__Group__0)
		{ after(grammarAccess.getClassAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClassHeader
entryRuleClassHeader
:
{ before(grammarAccess.getClassHeaderRule()); }
	 ruleClassHeader
{ after(grammarAccess.getClassHeaderRule()); } 
	 EOF 
;

// Rule ClassHeader
ruleClassHeader 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassHeaderAccess().getGroup()); }
		(rule__ClassHeader__Group__0)
		{ after(grammarAccess.getClassHeaderAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClassBody
entryRuleClassBody
:
{ before(grammarAccess.getClassBodyRule()); }
	 ruleClassBody
{ after(grammarAccess.getClassBodyRule()); } 
	 EOF 
;

// Rule ClassBody
ruleClassBody 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassBodyAccess().getGroup()); }
		(rule__ClassBody__Group__0)
		{ after(grammarAccess.getClassBodyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttrBody
entryRuleAttrBody
:
{ before(grammarAccess.getAttrBodyRule()); }
	 ruleAttrBody
{ after(grammarAccess.getAttrBodyRule()); } 
	 EOF 
;

// Rule AttrBody
ruleAttrBody 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttrBodyAccess().getGroup()); }
		(rule__AttrBody__Group__0)
		{ after(grammarAccess.getAttrBodyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOpBody
entryRuleOpBody
:
{ before(grammarAccess.getOpBodyRule()); }
	 ruleOpBody
{ after(grammarAccess.getOpBodyRule()); } 
	 EOF 
;

// Rule OpBody
ruleOpBody 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOpBodyAccess().getGroup()); }
		(rule__OpBody__Group__0)
		{ after(grammarAccess.getOpBodyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArgBody
entryRuleArgBody
:
{ before(grammarAccess.getArgBodyRule()); }
	 ruleArgBody
{ after(grammarAccess.getArgBodyRule()); } 
	 EOF 
;

// Rule ArgBody
ruleArgBody 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArgBodyAccess().getGroup()); }
		(rule__ArgBody__Group__0)
		{ after(grammarAccess.getArgBodyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassBody__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassBodyAccess().getGroup_1_0()); }
		(rule__ClassBody__Group_1_0__0)
		{ after(grammarAccess.getClassBodyAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getClassBodyAccess().getGroup_1_1()); }
		(rule__ClassBody__Group_1_1__0)
		{ after(grammarAccess.getClassBodyAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgBody__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgBodyAccess().getInKeyword_0_0()); }
		'in'
		{ after(grammarAccess.getArgBodyAccess().getInKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getArgBodyAccess().getOutKeyword_0_1()); }
		'out'
		{ after(grammarAccess.getArgBodyAccess().getOutKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getModelKeyword_0()); }
	'model'
	{ after(grammarAccess.getModelAccess().getModelKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getNameAssignment_1()); }
	(rule__Model__NameAssignment_1)
	{ after(grammarAccess.getModelAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__2__Impl
	rule__Model__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getOPENDECLTerminalRuleCall_2()); }
	RULE_OPENDECL
	{ after(grammarAccess.getModelAccess().getOPENDECLTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__3__Impl
	rule__Model__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getClazzesAssignment_3()); }
	(rule__Model__ClazzesAssignment_3)*
	{ after(grammarAccess.getModelAccess().getClazzesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getCLOSEDECLTerminalRuleCall_4()); }
	RULE_CLOSEDECL
	{ after(grammarAccess.getModelAccess().getCLOSEDECLTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Class__Group__0__Impl
	rule__Class__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassAccess().getHeaderAssignment_0()); }
	(rule__Class__HeaderAssignment_0)
	{ after(grammarAccess.getClassAccess().getHeaderAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Class__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassAccess().getBodyAssignment_1()); }
	(rule__Class__BodyAssignment_1)
	{ after(grammarAccess.getClassAccess().getBodyAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassHeader__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassHeader__Group__0__Impl
	rule__ClassHeader__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassHeader__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassHeaderAccess().getClassKeyword_0()); }
	'class'
	{ after(grammarAccess.getClassHeaderAccess().getClassKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassHeader__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassHeader__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassHeader__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassHeaderAccess().getNameAssignment_1()); }
	(rule__ClassHeader__NameAssignment_1)
	{ after(grammarAccess.getClassHeaderAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassBody__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassBody__Group__0__Impl
	rule__ClassBody__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassBody__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassBodyAccess().getOPENDECLTerminalRuleCall_0()); }
	RULE_OPENDECL
	{ after(grammarAccess.getClassBodyAccess().getOPENDECLTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassBody__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassBody__Group__1__Impl
	rule__ClassBody__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassBody__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassBodyAccess().getAlternatives_1()); }
	(rule__ClassBody__Alternatives_1)*
	{ after(grammarAccess.getClassBodyAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassBody__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassBody__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassBody__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassBodyAccess().getCLOSEDECLTerminalRuleCall_2()); }
	RULE_CLOSEDECL
	{ after(grammarAccess.getClassBodyAccess().getCLOSEDECLTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassBody__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassBody__Group_1_0__0__Impl
	rule__ClassBody__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassBody__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassBodyAccess().getAttributesAssignment_1_0_0()); }
	(rule__ClassBody__AttributesAssignment_1_0_0)
	{ after(grammarAccess.getClassBodyAccess().getAttributesAssignment_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassBody__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassBody__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassBody__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassBodyAccess().getCLOSELINETerminalRuleCall_1_0_1()); }
	RULE_CLOSELINE
	{ after(grammarAccess.getClassBodyAccess().getCLOSELINETerminalRuleCall_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassBody__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassBody__Group_1_1__0__Impl
	rule__ClassBody__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassBody__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassBodyAccess().getOperationsAssignment_1_1_0()); }
	(rule__ClassBody__OperationsAssignment_1_1_0)
	{ after(grammarAccess.getClassBodyAccess().getOperationsAssignment_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassBody__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassBody__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassBody__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassBodyAccess().getCLOSELINETerminalRuleCall_1_1_1()); }
	RULE_CLOSELINE
	{ after(grammarAccess.getClassBodyAccess().getCLOSELINETerminalRuleCall_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttrBody__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttrBody__Group__0__Impl
	rule__AttrBody__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrBody__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttrBodyAccess().getVISIBILITYTerminalRuleCall_0()); }
	RULE_VISIBILITY
	{ after(grammarAccess.getAttrBodyAccess().getVISIBILITYTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrBody__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttrBody__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrBody__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttrBodyAccess().getGroup_1()); }
	(rule__AttrBody__Group_1__0)
	{ after(grammarAccess.getAttrBodyAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttrBody__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttrBody__Group_1__0__Impl
	rule__AttrBody__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrBody__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttrBodyAccess().getNameAssignment_1_0()); }
	(rule__AttrBody__NameAssignment_1_0)
	{ after(grammarAccess.getAttrBodyAccess().getNameAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrBody__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttrBody__Group_1__1__Impl
	rule__AttrBody__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrBody__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttrBodyAccess().getColonKeyword_1_1()); }
	':'
	{ after(grammarAccess.getAttrBodyAccess().getColonKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrBody__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttrBody__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrBody__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttrBodyAccess().getTypeAssignment_1_2()); }
	(rule__AttrBody__TypeAssignment_1_2)
	{ after(grammarAccess.getAttrBodyAccess().getTypeAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OpBody__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpBody__Group__0__Impl
	rule__OpBody__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpBody__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpBodyAccess().getOperationKeyword_0()); }
	'operation'
	{ after(grammarAccess.getOpBodyAccess().getOperationKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpBody__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpBody__Group__1__Impl
	rule__OpBody__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OpBody__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpBodyAccess().getNameAssignment_1()); }
	(rule__OpBody__NameAssignment_1)
	{ after(grammarAccess.getOpBodyAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpBody__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpBody__Group__2__Impl
	rule__OpBody__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OpBody__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpBodyAccess().getOPENARGTerminalRuleCall_2()); }
	RULE_OPENARG
	{ after(grammarAccess.getOpBodyAccess().getOPENARGTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpBody__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpBody__Group__3__Impl
	rule__OpBody__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OpBody__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpBodyAccess().getGroup_3()); }
	(rule__OpBody__Group_3__0)?
	{ after(grammarAccess.getOpBodyAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpBody__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpBody__Group__4__Impl
	rule__OpBody__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__OpBody__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpBodyAccess().getCLOSEARGTerminalRuleCall_4()); }
	RULE_CLOSEARG
	{ after(grammarAccess.getOpBodyAccess().getCLOSEARGTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpBody__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpBody__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpBody__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpBodyAccess().getGroup_5()); }
	(rule__OpBody__Group_5__0)?
	{ after(grammarAccess.getOpBodyAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OpBody__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpBody__Group_3__0__Impl
	rule__OpBody__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpBody__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpBodyAccess().getGroup_3_0()); }
	(rule__OpBody__Group_3_0__0)*
	{ after(grammarAccess.getOpBodyAccess().getGroup_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpBody__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpBody__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpBody__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpBodyAccess().getArgsAssignment_3_1()); }
	(rule__OpBody__ArgsAssignment_3_1)
	{ after(grammarAccess.getOpBodyAccess().getArgsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OpBody__Group_3_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpBody__Group_3_0__0__Impl
	rule__OpBody__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpBody__Group_3_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpBodyAccess().getArgsAssignment_3_0_0()); }
	(rule__OpBody__ArgsAssignment_3_0_0)
	{ after(grammarAccess.getOpBodyAccess().getArgsAssignment_3_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpBody__Group_3_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpBody__Group_3_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpBody__Group_3_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpBodyAccess().getCommaKeyword_3_0_1()); }
	','
	{ after(grammarAccess.getOpBodyAccess().getCommaKeyword_3_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OpBody__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpBody__Group_5__0__Impl
	rule__OpBody__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpBody__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpBodyAccess().getReturnKeyword_5_0()); }
	'return'
	{ after(grammarAccess.getOpBodyAccess().getReturnKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpBody__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpBody__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpBody__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpBodyAccess().getTypeAssignment_5_1()); }
	(rule__OpBody__TypeAssignment_5_1)
	{ after(grammarAccess.getOpBodyAccess().getTypeAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArgBody__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgBody__Group__0__Impl
	rule__ArgBody__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgBody__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgBodyAccess().getAlternatives_0()); }
	(rule__ArgBody__Alternatives_0)
	{ after(grammarAccess.getArgBodyAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgBody__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgBody__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgBody__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgBodyAccess().getGroup_1()); }
	(rule__ArgBody__Group_1__0)
	{ after(grammarAccess.getArgBodyAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArgBody__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgBody__Group_1__0__Impl
	rule__ArgBody__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgBody__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgBodyAccess().getNameAssignment_1_0()); }
	(rule__ArgBody__NameAssignment_1_0)
	{ after(grammarAccess.getArgBodyAccess().getNameAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgBody__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgBody__Group_1__1__Impl
	rule__ArgBody__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgBody__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgBodyAccess().getColonKeyword_1_1()); }
	':'
	{ after(grammarAccess.getArgBodyAccess().getColonKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgBody__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgBody__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgBody__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgBodyAccess().getTypeAssignment_1_2()); }
	(rule__ArgBody__TypeAssignment_1_2)
	{ after(grammarAccess.getArgBodyAccess().getTypeAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getModelAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ClazzesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getClazzesClassParserRuleCall_3_0()); }
		ruleClass
		{ after(grammarAccess.getModelAccess().getClazzesClassParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__HeaderAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassAccess().getHeaderClassHeaderParserRuleCall_0_0()); }
		ruleClassHeader
		{ after(grammarAccess.getClassAccess().getHeaderClassHeaderParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__BodyAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassAccess().getBodyClassBodyParserRuleCall_1_0()); }
		ruleClassBody
		{ after(grammarAccess.getClassAccess().getBodyClassBodyParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassHeader__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassHeaderAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getClassHeaderAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassBody__AttributesAssignment_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassBodyAccess().getAttributesAttrBodyParserRuleCall_1_0_0_0()); }
		ruleAttrBody
		{ after(grammarAccess.getClassBodyAccess().getAttributesAttrBodyParserRuleCall_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassBody__OperationsAssignment_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassBodyAccess().getOperationsOpBodyParserRuleCall_1_1_0_0()); }
		ruleOpBody
		{ after(grammarAccess.getClassBodyAccess().getOperationsOpBodyParserRuleCall_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrBody__NameAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttrBodyAccess().getNameIDTerminalRuleCall_1_0_0()); }
		RULE_ID
		{ after(grammarAccess.getAttrBodyAccess().getNameIDTerminalRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrBody__TypeAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttrBodyAccess().getTypeIDTerminalRuleCall_1_2_0()); }
		RULE_ID
		{ after(grammarAccess.getAttrBodyAccess().getTypeIDTerminalRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpBody__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOpBodyAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getOpBodyAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpBody__ArgsAssignment_3_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOpBodyAccess().getArgsArgBodyParserRuleCall_3_0_0_0()); }
		ruleArgBody
		{ after(grammarAccess.getOpBodyAccess().getArgsArgBodyParserRuleCall_3_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpBody__ArgsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOpBodyAccess().getArgsArgBodyParserRuleCall_3_1_0()); }
		ruleArgBody
		{ after(grammarAccess.getOpBodyAccess().getArgsArgBodyParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpBody__TypeAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOpBodyAccess().getTypeIDTerminalRuleCall_5_1_0()); }
		RULE_ID
		{ after(grammarAccess.getOpBodyAccess().getTypeIDTerminalRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgBody__NameAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgBodyAccess().getNameIDTerminalRuleCall_1_0_0()); }
		RULE_ID
		{ after(grammarAccess.getArgBodyAccess().getNameIDTerminalRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgBody__TypeAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgBodyAccess().getTypeIDTerminalRuleCall_1_2_0()); }
		RULE_ID
		{ after(grammarAccess.getArgBodyAccess().getTypeIDTerminalRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_VISIBILITY : ('public'|'private'|'protected'|'package');

RULE_OPENDECL : '{';

RULE_CLOSEDECL : '}';

RULE_CLOSELINE : ';';

RULE_OPENARG : '(';

RULE_CLOSEARG : ')';

fragment RULE_LOWERCASE : 'a'..'z';

fragment RULE_UPPERCASE : 'A'..'Z';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
